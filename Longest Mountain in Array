class Solution {
public:
    int longestMountain(vector<int>& arr) {
        
        int n = arr.size();
        vector<int> inc(n, 0), dec(n, 0);
        for(int i = 0; i < n; i++) {
            int len = 1;
            int j = i + 1;
            int prev = arr[i];
            while(j < n && arr[j] > prev) {
                len++;
                prev = arr[j];
                j++;
            }
            int h = i;
            int cnt = 1;
            while(cnt <= len && h < n) {
                inc[h++] = cnt++ - 1;
            }
            i = j - 1;
        }
        for(int i = n - 1; i >= 0; i--) {
            int len = 1;
            int j = i - 1;
            int prev = arr[i];
            while(j >= 0 && arr[j] > prev) {
                len++;
                prev = arr[j];
                j--;
            }
            int h = i;
            int cnt = 1;
            while(cnt <= len && h >= 0) {
                dec[h--] = cnt++ - 1;
            }
            i = j + 1;
        }
       
        int ans = 0;
        for(int i = 0; i < n; i++) {
            if(inc[i] > 0 && dec[i] > 0)
            ans = max(ans, inc[i] + dec[i] + 1);
        }
        if(ans < 3) return 0;
        return ans;
        return 0;
    }
};
