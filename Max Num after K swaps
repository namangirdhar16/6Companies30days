class Solution
{
    public:
    void dfs(
    string str, int k, string& max)
   {

    if (k == 0)
        return;

    int n = str.length();

   
    for (int i = 0; i < n - 1; i++) {

        
        for (int j = i + 1; j < n; j++) {

            if (str[i] < str[j]) {
                swap(str[i], str[j]);

                if (str > max)
                    max = str;
                dfs(str, k - 1, max);

                swap(str[i], str[j]);
            }
        }
    }
}
    //Function to find the largest number after k swaps.
    string findMaximumNum(string str, int k)
    {
       // code here.
       string maxi = "";
       dfs(str, k, maxi);
       return maxi;
    }
};
