int s = 0;
    int dfs(int arr[], int idx, int n, int sum, vector<vector<int>> &dp) {
        if(idx >= n) {
            return abs(2 * sum - s);
        }
        if(dp[idx][sum] != -1) return dp[idx][sum];
        int &ans = dp[idx][sum];
        ans = min(dfs(arr, idx + 1, n, sum + arr[idx], dp), dfs(arr, idx + 1, n, sum, dp));
        return ans;
    }
	int minDifference(int arr[], int n)  { 
	    // Your code goes here
	    s = 0;
	    for(int i = 0; i < n; i++) {
	        s += arr[i];
	    }
	    vector<vector<int>> dp(n, vector<int> (s, -1));
	    //memset(dp, -1, sizeof dp);
	    int ans = dfs(arr, 0, n, 0, dp);
	    return ans;
	} 
