class Solution {
public:
    bool valid(int mid, vector<int> &weights, int days) {
        int c = mid;
        int cnt_d = 1;
        int n = weights.size();
        int i = 0;
        int sum = 0;
        while(i < n) {
           if(weights[i] > mid) return false;
           if(sum + weights[i] <= mid) {
               sum += weights[i++];
           }
           else {
               sum = 0;
               cnt_d++;
           }
        }
        return cnt_d <= days;
    }
    int shipWithinDays(vector<int>& weights, int days) {
        
        int mini = INT_MAX;
        int lo = 0;
        int hi = INT_MAX;
        int ans = INT_MAX;
        while(lo <= hi) {
            int mid = lo + (hi - lo) / 2;
            if(valid(mid, weights, days)) {
                ans = min(ans, mid);
                hi = mid - 1;
            }
            else lo = mid + 1;
        }
        return ans;
    }
};
