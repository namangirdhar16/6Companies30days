	bool isPossible(int N, vector<pair<int, int> >& pre) {
	    // Code here
	    
	    int indeg[N];
	    map<int, vector<int>> adj;
	    memset(indeg, 0, sizeof indeg);
	    queue<int> q;
	    for(auto it: pre) {
	        indeg[it.first]++;
	        adj[it.second].push_back(it.first);
	    }
	    for(int i = 0; i < N; i++) {
	        if(indeg[i] == 0) q.push(i);
	    }
	    vector<int> ans;
	    while(q.size() > 0) {
	        int node = q.front();
	        q.pop();
	        ans.push_back(node);
	        for(auto it: adj[node]) {
	            indeg[it]--;
	            if(indeg[it] == 0) {
	                q.push(it);
	            }
	        }
	    }
	    if(ans.size() != N) return false;
	    return true;
	}
